{"version":3,"sources":["token.js","vue-header.js","vue-selector.js","vue-uploader.js","search.js"],"names":[],"mappingsthKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpfile":"search.js","sourcesContent":["\"use strict\";\r\n\r\nVue.http.headers.common['X-CSRF-TOKEN'] = document.querySelector('#token').getAttribute('value');\r\n","var MyHeader = Vue.extend({\r\n  template: '#header-control-template',\r\n  props: {\r\n    headerTitle: {\r\n      type: String,\r\n      default: 'Title'\r\n    },\r\n    searchPlaceholder: {\r\n      type: String,\r\n      default: 'Search all'\r\n    },\r\n    search: { // Allow searching\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    filterSearch: { // Let the control know this will be used as filter for the v-for calls\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    exportExcel: { // Allow data export icon\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    exportButtonTooltip: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    backButton: { // Allow back button\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    clearButton: { // Allow search clear button\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    addButton: { // Allow add button\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    addButtonTooltip: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    showImage: { // Allow image on header\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    imageUrl: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    searchFor: {\r\n      type: String,\r\n      twoWay: true,\r\n      default: ''\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      searchPerformed: false,\r\n      showBadge: false,\r\n      badgeText: '',\r\n      isMobileView: false,\r\n    }\r\n  },\r\n  ready() {\r\n    this.isMobileView = ($(window).width() < 768);\r\n  },\r\n  methods: {\r\n    coerceBoolean: function(val){\r\n      return (typeof val !== \"string\" ? val :\r\n        val === \"true\" ? true :\r\n        val === \"false\" ? false :\r\n        val === \"null\" ? false :\r\n        val === \"undefined\" ? false : val);\r\n    },\r\n    setFilter: function(){\r\n      if(!this.filterSearch){\r\n        this.searchPerformed = true;\r\n      }\r\n      this.dispatchEvent('set-filter', this.searchFor);\r\n    },\r\n    clearFilter: function(){\r\n      this.searchFor = '';\r\n      if(!this.filterSearch){\r\n        this.searchPerformed = false;\r\n      }\r\n      this.dispatchEvent('clear-filter');\r\n    },\r\n    addItem: function(){\r\n      this.dispatchEvent('add-item');\r\n    },\r\n    exportItem: function(){\r\n      this.dispatchEvent('export-item');\r\n    },\r\n    dispatchEvent: function(event, data){\r\n      this.$dispatch(event, data);\r\n    },\r\n  },\r\n  computed: {\r\n  },\r\n  events: {\r\n    'show-badge': function(val) {\r\n      this.showBadge = true;\r\n      this.badgeText = val;\r\n    },\r\n    'search-cleared': function(){\r\n      this.searchFor = '';\r\n    }\r\n  }\r\n});\r\n","var MySelector = Vue.extend({\r\n  template: '#selector-control-template',\r\n  props: {\r\n    options: {\r\n      type: Array,\r\n      default() { return [] },\r\n    },\r\n    value: {\r\n      twoWay: true\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      default: 'Nothing Selected'\r\n    },\r\n    multiple: {\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    search: { // Allow searching (only works when options are provided)\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    limit: {\r\n      type: Number,\r\n      default: 1024\r\n    },\r\n    closeOnSelect: { // only works when multiple==false\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    }\r\n  },\r\n  ready() {\r\n    if (this.value.constructor !== Array) {\r\n      if (this.value.length === 0) {\r\n        this.value = []\r\n      } else {\r\n        this.value = [this.value]\r\n      }\r\n    } else {\r\n      if (!this.multiple && this.value.length > 1) {\r\n        this.value = this.value.slice(0, 1)\r\n      } else if (this.multiple && this.value.length > this.limit) {\r\n        this.value = this.value.slice(0, this.limit)\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      searchText: null,\r\n      show: false,\r\n      showNotify: false\r\n    }\r\n  },\r\n  computed: {\r\n    selectedItems: function() {\r\n      let foundItems = [];\r\n      if (this.value.length) {\r\n        for (var item of this.value) {\r\n          if (this.options.length === 0)\r\n          {\r\n            foundItems = this.value;\r\n          }\r\n          else\r\n          {\r\n              let option\r\n              this.options.some(o => {\r\n                if(o.value === item) {\r\n                  option = o\r\n                  return true\r\n                }\r\n              })\r\n              option && foundItems.push(option.label)\r\n          }\r\n        }\r\n      } else if(this.value != 0) {\r\n        if (this.options.length === 0)\r\n        {\r\n          foundItems = this.value;\r\n        }\r\n        else\r\n        {\r\n          let option\r\n          this.options.some(o => {\r\n            if(o.value === this.value) {\r\n              option = o\r\n              return true\r\n            }\r\n          })\r\n          option && foundItems.push(option.label)\r\n        }\r\n      }\r\n      return foundItems.join(', ')\r\n\r\n    },\r\n    showPlaceholder: function() {\r\n      return this.value.length === 0\r\n    }\r\n  },\r\n  watch: {\r\n    value(val) {\r\n      if (val.length > this.limit) {\r\n        this.showNotify = true\r\n        this.value.pop()\r\n        setTimeout(() => this.showNotify = false, 1000)\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    coerceBoolean: function(val){\r\n      return (typeof val !== \"string\" ? val :\r\n        val === \"true\" ? true :\r\n        val === \"false\" ? false :\r\n        val === \"null\" ? false :\r\n        val === \"undefined\" ? false : val);\r\n    },\r\n    select: function(v) {\r\n        if (this.value.constructor === Array && this.value.indexOf(v) === -1) {\r\n          if (this.multiple) {\r\n            this.value.push(v)\r\n          } else {\r\n            this.value = [v]\r\n            this.$dispatch('selection-changed', this.value);\r\n          }\r\n        } else {\r\n          if (this.multiple) {\r\n            this.value.$remove(v)\r\n          } else {\r\n            this.value = [v]\r\n            this.$dispatch('selection-changed', this.value);\r\n          }\r\n        }\r\n        if (this.closeOnSelect) {\r\n          this.toggleDropdown()\r\n        }\r\n    },\r\n    isSelected: function(v) {\r\n      if (this.value.constructor !== Array) {\r\n        return this.value == v\r\n      } else {\r\n        return this.value.indexOf(v) !== -1\r\n      }\r\n    },\r\n    toggleDropdown: function() {\r\n      this.show = !this.show\r\n    }\r\n  },\r\n  events: {\r\n    'clear-selection-search': function(){\r\n      this.searchText = '';\r\n    }\r\n  }\r\n});\r\n","var MyUploader = Vue.extend({\r\n  template: '#uploader-template',\r\n  data: {\r\n    imageLoaded: 'false',\r\n  },\r\n  props: ['imageSrc'],\r\n  computed: {\r\n    isClearable: function(){\r\n      if(this.imageLoaded == 'true') return true;\r\n\r\n      return false;\r\n    }\r\n  },\r\n  methods: {\r\n    dispatchEvent: function(eventName, args) {\r\n      this.$dispatch(eventName, args)\r\n    },\r\n    previewThumbnail: function(event) {\r\n      var inputObj = event.target;\r\n\r\n      if (inputObj.files && inputObj.files[0]) {\r\n        var reader = new FileReader();\r\n\r\n        var vm = this;\r\n\r\n        // Listen to the load event raised by the file reader in order to show the image\r\n        reader.onload = function(e) {\r\n          vm.imageSrc = e.target.result;\r\n          vm.imageLoaded = 'true';\r\n          vm.dispatchEvent('cover-chosen', vm.imageSrc);\r\n        }\r\n\r\n        // making the reader load the image for real\r\n        reader.readAsDataURL(inputObj.files[0]);\r\n\r\n      }\r\n    },\r\n    clearThumbnail: function(){\r\n    \t$('#thumbnail').files = null;\r\n      $('#thumbnail').val(null);\r\n      this.imageSrc = '';\r\n      this.imageLoaded = 'false';\r\n      this.dispatchEvent('cover-clear');\r\n    }\r\n  },\r\n  events: {\r\n    'image-source': function(str){\r\n      this.clearThumbnail();\r\n      this.imageSrc = str;\r\n    }\r\n  }\r\n});\r\n","\r\n// Components declaration\r\nVue.component('my-header', MyHeader);\r\nVue.component('my-uploader', MyUploader);\r\nVue.component('my-authors', MySelector);\r\nVue.component('my-found-authors', MySelector);\r\nVue.component('my-languages', MySelector);\r\nVue.component('my-found-languages', MySelector);\r\nVue.component('my-publishers', MySelector);\r\nVue.component('my-found-publishers', MySelector);\r\n\r\nvar vm = new Vue({\r\n    el: '#search',\r\n\r\n    // data setup\r\n    data: {\r\n      searchIsbn: '',\r\n      newPublisher: true,\r\n      usePublisher: false,\r\n      customPublisher: false,\r\n      newAuthor: true,\r\n      useAuthor: false,\r\n      customAuthor: false,\r\n      newLanguage: true,\r\n      useLanguage: false,\r\n      customLanguage: false,\r\n      useCover: true,\r\n      customCover: false,\r\n      useYear: true,\r\n      useIsbn: true,\r\n      useDescription: true,\r\n      correspondingPublishers: [],\r\n      correspondingAuthors: [],\r\n      correspondingLanguages: [],\r\n      foundBook: {\r\n        'title': '',\r\n        'author': '',\r\n        'publisher': '',\r\n        'year': '',\r\n        'cover': '',\r\n        'description': '',\r\n        'language': '',\r\n        'isbn': '',\r\n      },\r\n      modalData: {\r\n        'title': '',\r\n        'year': '',\r\n        'isbn': '',\r\n        'description': '',\r\n        'publisher': '',\r\n        'publisher_id': '',\r\n        'authors': [],\r\n        'languages': [],\r\n        'cover': '',\r\n        'modaltitle': 'New Book'\r\n      },\r\n      similarSelections: {\r\n        'publisher_id': '',\r\n        'authors': [],\r\n        'languages': [],\r\n      },\r\n      customSelections: {\r\n        'publisher_id': '',\r\n        'authors': [],\r\n        'languages': [],\r\n        'cover': '',\r\n      },\r\n      finalData: {\r\n        'id': '',\r\n        'title': '',\r\n        'year': '',\r\n        'isbn': '',\r\n        'description': '',\r\n        'is_new_publisher': false,\r\n        'publisher_id': '',\r\n        'is_new_author': false,\r\n        'authors': [],\r\n        'is_new_language': false,\r\n        'languages': [],\r\n        'cover': '',\r\n      }\r\n    },\r\n\r\n    // what to do once the page load at first\r\n    ready: function(){\r\n      // fetching data for add/edit purposes\r\n      this.fetchData();\r\n\r\n    },\r\n\r\n    // watches to variables changes\r\n    watch: {\r\n      'newPublisher': function(val, oldVal){\r\n        if(val == true){\r\n          this.usePublisher = false;\r\n          this.customPublisher = false;\r\n        }\r\n      },\r\n      'usePublisher': function(val, oldVal){\r\n        if(val == true){\r\n          this.newPublisher = false;\r\n          this.customPublisher = false;\r\n        }\r\n      },\r\n      'customPublisher': function(val, oldVal){\r\n        if(val == true){\r\n          this.useAuthor = false;\r\n          this.newAuthor = false;\r\n        }\r\n      },\r\n      'newAuthor': function(val, oldVal){\r\n        if(val == true){\r\n          this.useAuthor = false;\r\n          this.customAuthor = false;\r\n        }\r\n      },\r\n      'useAuthor': function(val, oldVal){\r\n        if(val == true){\r\n          this.newAuthor = false;\r\n          this.customAuthor = false;\r\n        }\r\n      },\r\n      'customAuthor': function(val, oldVal){\r\n        if(val == true){\r\n          this.useAuthor = false;\r\n          this.newAuthor = false;\r\n        }\r\n      },\r\n      'newLanguage': function(val, oldVal){\r\n        if(val == true){\r\n          this.useLanguage = false;\r\n          this.customLanguage = false;\r\n        }\r\n      },\r\n      'useLanguage': function(val, oldVal){\r\n        if(val == true){\r\n          this.newLanguage = false;\r\n          this.customLanguage = false;\r\n        }\r\n      },\r\n      'customLanguage': function(val, oldVal){\r\n        if(val == true){\r\n          this.useLanguage = false;\r\n          this.newLanguage = false;\r\n        }\r\n      },\r\n      'useCover': function(val, oldVal){\r\n        if(val == true){\r\n          this.customCover = false;\r\n        }\r\n      },\r\n      'customCover': function(val, oldVal){\r\n        if(val == true){\r\n          this.useCover = false;\r\n        }\r\n      },\r\n    },\r\n\r\n    // computations used to show/hide enable/disable controls\r\n    computed: {\r\n      somethingFound: function(){\r\n        return !this.foundBook.title && !this.foundBook.author && !this.foundBook.publisher && !this.foundBook.year && !this.foundBook.cover &&\r\n               !this.foundBook.description && !this.foundBook.language && !this.foundBook.isbn;\r\n      }\r\n    },\r\n\r\n    // methods\r\n    methods: {\r\n      fetchData: function(){\r\n        this.$http.get('/api/getAuthorsValueLabel', function(authors){\r\n          this.$set('authors', authors);\r\n        });\r\n        this.$http.get('/api/getLanguagesValueLabel', function(languages){\r\n          this.$set('languages', languages);\r\n        });\r\n        this.$http.get('/api/getPublishersValueLabel', function(publishers){\r\n          this.$set('publishers', publishers);\r\n        });\r\n      },\r\n      onSubmitSearch: function(e){\r\n        e.preventDefault();\r\n        this.showLoader();\r\n        this.$http.get('/api/isbnSearch/'+this.searchIsbn, function(data){\r\n          if(data.success === false){\r\n            swal('Error', data.error, 'error');\r\n          } else {\r\n            this.foundBook = {\r\n              title: data.value.title,\r\n              author: data.value.author,\r\n              publisher: data.value.publisher,\r\n              year: data.value.year,\r\n              cover: data.value.cover,\r\n              description: data.value.description,\r\n              language: data.value.language,\r\n              isbn: data.value.isbn,\r\n            };\r\n            this.correspondingAuthors = data.correspondences.authors;\r\n            this.correspondingPublishers = data.correspondences.publishers;\r\n            this.correspondingLanguages = data.correspondences.languages;\r\n\r\n          }\r\n\r\n          this.hideLoader();\r\n        });\r\n      },\r\n      onSubmitBook: function(e){\r\n        e.preventDefault();\r\n        this.showLoader();\r\n        this.finalData = {\r\n          id: '',\r\n          title: this.modalData.title,\r\n          year: (this.useYear)?this.modalData.year:'',\r\n          isbn: (this.useIsbn)?this.modalData.isbn:'',\r\n          description: (this.useDescription)?this.modalData.description:'',\r\n          is_new_publisher: this.newPublisher,\r\n          publisher_id: (this.newPublisher)?this.modalData.publisher:((this.customPublisher)?this.customSelections.publisher_id:((this.usePublisher)?this.similarSelections.publisher_id:'')),\r\n          is_new_author: this.newAuthor,\r\n          authors: (this.newAuthor)?this.modalData.authors:((this.customAuthor)?this.customSelections.authors:((this.useAuthor)?this.similarSelections.authors:'')),\r\n          is_new_language: this.newLanguage,\r\n          languages: (this.newLanguage)?this.modalData.languages:((this.customLanguage)?this.customSelections.languages:((this.useLanguage)?this.similarSelections.languages:'')),\r\n          cover: (this.useCover)?this.modalData.cover:((this.customCover)?this.customSelections.cover:''),\r\n        };\r\n\r\n        this.$http.post('/api/setBook', this.finalData, function(){\r\n          // refreshing Books\r\n          swal('Info', 'Book created, please go to the shelf to see it.', 'success');\r\n\r\n          this.fetchData();\r\n\r\n          this.modalData = { title: '',\r\n                           year: '',\r\n                           isbn: '',\r\n                           description: '',\r\n                           publisher: '',\r\n                           publisher_id: '',\r\n                           authors: '',\r\n                           languages: '',\r\n                           cover: '',\r\n                           modaltitle: 'Create New Book' };\r\n\r\n          this.newPublisher = true;\r\n          this.usePublisher = false;\r\n          this.customPublisher = false;\r\n          this.newAuthor = true;\r\n          this.useAuthor = false;\r\n          this.customAuthor = false;\r\n          this.newLanguage = true;\r\n          this.useLanguage = false;\r\n          this.customLanguage = false;\r\n          this.useCover = true;\r\n          this.customCover = false;\r\n          this.useYear = true;\r\n          this.useIsbn = true;\r\n          this.useDescription = true;\r\n\r\n          this.hideLoader();\r\n        });\r\n        $('#onlineModal').modal('hide');\r\n\r\n      },\r\n      createBook: function(){\r\n        this.modalData = { title: this.foundBook.title,\r\n                         year: this.foundBook.year,\r\n                         isbn: this.foundBook.isbn,\r\n                         description: this.foundBook.description,\r\n                         publisher: this.foundBook.publisher,\r\n                         publisher_id: '',\r\n                         authors: this.foundBook.author,\r\n                         languages: this.foundBook.language,\r\n                         cover: this.foundBook.cover,\r\n                         modaltitle: 'Create New Book' };\r\n\r\n        $('#onlineModal').modal('show');\r\n      },\r\n      showLoader: function(){\r\n        $('.fullpage-mask').show();\r\n        $('.fullpage-loader').show();\r\n      },\r\n      hideLoader: function(){\r\n        $('.fullpage-mask').hide();\r\n        $('.fullpage-loader').hide();\r\n      }\r\n    },\r\n\r\n    // component events\r\n    events: {\r\n    }\r\n});\r\n\r\n$('[data-toggle=\"tooltip\"]').tooltip();\r\n"],"sourceRoot":"/source/"}