{"version":3,"sources":["token.js","vue-selector.js","vue-book-read.js","vue-header.js","book_reads.js"],"names":[],"mappingshKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACltHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"book_reads.js","sourcesContent":["\"use strict\";\r\n\r\nVue.http.headers.common['X-CSRF-TOKEN'] = document.querySelector('#token').getAttribute('value');\r\n","var MySelector = Vue.extend({\r\n  template: '#selector-control-template',\r\n  props: {\r\n    options: {\r\n      type: Array,\r\n      default() { return [] },\r\n    },\r\n    value: {\r\n      twoWay: true\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      default: 'Nothing Selected'\r\n    },\r\n    multiple: {\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    search: { // Allow searching (only works when options are provided)\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    limit: {\r\n      type: Number,\r\n      default: 1024\r\n    },\r\n    closeOnSelect: { // only works when multiple==false\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    }\r\n  },\r\n  ready() {\r\n    if (this.value.constructor !== Array) {\r\n      if (this.value.length === 0) {\r\n        this.value = []\r\n      } else {\r\n        this.value = [this.value]\r\n      }\r\n    } else {\r\n      if (!this.multiple && this.value.length > 1) {\r\n        this.value = this.value.slice(0, 1)\r\n      } else if (this.multiple && this.value.length > this.limit) {\r\n        this.value = this.value.slice(0, this.limit)\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      searchText: null,\r\n      show: false,\r\n      showNotify: false\r\n    }\r\n  },\r\n  computed: {\r\n    selectedItems: function() {\r\n      let foundItems = [];\r\n      if (this.value.length) {\r\n        for (var item of this.value) {\r\n          if (this.options.length === 0)\r\n          {\r\n            foundItems = this.value;\r\n          }\r\n          else\r\n          {\r\n              let option\r\n              this.options.some(o => {\r\n                if(o.value === item) {\r\n                  option = o\r\n                  return true\r\n                }\r\n              })\r\n              option && foundItems.push(option.label)\r\n          }\r\n        }\r\n      } else if(this.value != 0) {\r\n        if (this.options.length === 0)\r\n        {\r\n          foundItems = this.value;\r\n        }\r\n        else\r\n        {\r\n          let option\r\n          this.options.some(o => {\r\n            if(o.value === this.value) {\r\n              option = o\r\n              return true\r\n            }\r\n          })\r\n          option && foundItems.push(option.label)\r\n        }\r\n      }\r\n      return foundItems.join(', ')\r\n\r\n    },\r\n    showPlaceholder: function() {\r\n      return this.value.length === 0\r\n    }\r\n  },\r\n  watch: {\r\n    value(val) {\r\n      if (val.length > this.limit) {\r\n        this.showNotify = true\r\n        this.value.pop()\r\n        setTimeout(() => this.showNotify = false, 1000)\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    coerceBoolean: function(val){\r\n      return (typeof val !== \"string\" ? val :\r\n        val === \"true\" ? true :\r\n        val === \"false\" ? false :\r\n        val === \"null\" ? false :\r\n        val === \"undefined\" ? false : val);\r\n    },\r\n    select: function(v) {\r\n        if (this.value.constructor === Array && this.value.indexOf(v) === -1) {\r\n          if (this.multiple) {\r\n            this.value.push(v)\r\n          } else {\r\n            this.value = [v]\r\n            this.$dispatch('selection-changed', this.value);\r\n          }\r\n        } else {\r\n          if (this.multiple) {\r\n            this.value.$remove(v)\r\n          } else {\r\n            this.value = [v]\r\n            this.$dispatch('selection-changed', this.value);\r\n          }\r\n        }\r\n        if (this.closeOnSelect) {\r\n          this.toggleDropdown()\r\n        }\r\n    },\r\n    isSelected: function(v) {\r\n      if (this.value.constructor !== Array) {\r\n        return this.value == v\r\n      } else {\r\n        return this.value.indexOf(v) !== -1\r\n      }\r\n    },\r\n    toggleDropdown: function() {\r\n      this.show = !this.show\r\n    }\r\n  },\r\n  events: {\r\n    'clear-selection-search': function(){\r\n      this.searchText = '';\r\n    }\r\n  }\r\n});\r\n","var MyBookRead = Vue.extend({\r\n  template: '#book-read-component-template',\r\n  components: {\r\n    'my-selector': MySelector,\r\n  },\r\n  props:{\r\n    bookId:{\r\n      type: Number,\r\n      twoWay: true,\r\n      default() { return '' }\r\n    },\r\n    readStatus:{\r\n      type: Number,\r\n      twoWay: true,\r\n      default() { return '' }\r\n    },\r\n    readStart:{\r\n      type: String,\r\n      twoWay: true,\r\n      default() { return '' }\r\n    },\r\n    readEnd:{\r\n      type: String,\r\n      twoWay: true,\r\n      default() { return '' }\r\n    },\r\n    readId:{\r\n      type: Number,\r\n      twoWay: true,\r\n      default() { return '' }\r\n    },\r\n    statuses: {\r\n      type: Array,\r\n      default() { return [] },\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      showEnd: '',\r\n      token: '',\r\n      internalId: '',\r\n    }\r\n  },\r\n  ready() {\r\n    this.showEnd = (this.readStatus != 1);\r\n    this.token = Math.random().toString(36).substr(2);\r\n    this.internalId = this.readId;\r\n\r\n    var that = this;\r\n\r\n    this.$nextTick(function(){\r\n      $('[data-toggle=\"tooltip\"]').tooltip();\r\n\r\n      $('#start_date_'+that.token).datetimepicker({\r\n        format: 'YYYY-MM-DD'\r\n      });\r\n      $('#end_date_'+that.token).datetimepicker({\r\n          useCurrent: false,\r\n          format: 'YYYY-MM-DD'\r\n      });\r\n      $(\"#start_date_\"+that.token).on(\"dp.change\", function (e) {\r\n        $('#end_date_'+that.token).data(\"DateTimePicker\").minDate(e.date);\r\n      });\r\n      $(\"#end_date_\"+that.token).on(\"dp.change\", function (e) {\r\n          $('#start_date_'+that.token).data(\"DateTimePicker\").maxDate(e.date);\r\n      });\r\n\r\n    });\r\n\r\n  },\r\n  methods: {\r\n    setReadId: function(val){\r\n      this.internalId = val;\r\n      $(\"#id_\"+this.token).val(val);\r\n      $(\"#main_\"+this.token).attr('data-id', val);\r\n    },\r\n    coerceBoolean: function(val){\r\n      return (typeof val !== \"string\" ? val :\r\n        val === \"true\" ? true :\r\n        val === \"false\" ? false :\r\n        val === \"null\" ? false :\r\n        val === \"undefined\" ? false : val);\r\n    },\r\n    deleteRead: function(e) {\r\n      e.preventDefault();\r\n\r\n      var that = this;\r\n\r\n      swal({\r\n       title: 'Are you sure?',\r\n       text: \"You are about to remove this book read, you won't be able to revert this!\",\r\n       type: 'warning',\r\n       showCancelButton: true,\r\n       confirmButtonColor: '#3085d6',\r\n       cancelButtonColor: '#d33',\r\n       confirmButtonText: 'Yes, delete it!'\r\n     }).then(function(isConfirm) {\r\n       if (isConfirm) {\r\n         that.$dispatch('delete-read', that.readId);\r\n       }\r\n     })\r\n    },\r\n    submitRead: function(e) {\r\n      e.preventDefault();\r\n      this.$dispatch('submit-read', { id: this.internalId, status: this.readStatus, start: this.readStart, end: this.readEnd, book_id: this.bookId } );\r\n    },\r\n  },\r\n  events: {\r\n    'selection-changed': function(val){\r\n      this.currentStatus = this.readStatus;\r\n      this.showEnd = (this.readStatus != 1);\r\n    },\r\n }\r\n});\r\n","var MyHeader = Vue.extend({\r\n  template: '#header-control-template',\r\n  props: {\r\n    headerTitle: {\r\n      type: String,\r\n      default: 'Title'\r\n    },\r\n    searchPlaceholder: {\r\n      type: String,\r\n      default: 'Search all'\r\n    },\r\n    search: { // Allow searching\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    filterSearch: { // Let the control know this will be used as filter for the v-for calls\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    exportExcel: { // Allow data export icon\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    exportButtonTooltip: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    backButton: { // Allow back button\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    clearButton: { // Allow search clear button\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    addButton: { // Allow add button\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    addButtonTooltip: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    showImage: { // Allow image on header\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    imageUrl: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    searchFor: {\r\n      type: String,\r\n      twoWay: true,\r\n      default: ''\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      searchPerformed: false,\r\n      showBadge: false,\r\n      badgeText: '',\r\n      isMobileView: false,\r\n    }\r\n  },\r\n  ready() {\r\n    this.isMobileView = ($(window).width() < 768);\r\n  },\r\n  methods: {\r\n    coerceBoolean: function(val){\r\n      return (typeof val !== \"string\" ? val :\r\n        val === \"true\" ? true :\r\n        val === \"false\" ? false :\r\n        val === \"null\" ? false :\r\n        val === \"undefined\" ? false : val);\r\n    },\r\n    setFilter: function(){\r\n      if(!this.filterSearch){\r\n        this.searchPerformed = true;\r\n      }\r\n      this.dispatchEvent('set-filter', this.searchFor);\r\n    },\r\n    clearFilter: function(){\r\n      this.searchFor = '';\r\n      if(!this.filterSearch){\r\n        this.searchPerformed = false;\r\n      }\r\n      this.dispatchEvent('clear-filter');\r\n    },\r\n    addItem: function(){\r\n      this.dispatchEvent('add-item');\r\n    },\r\n    exportItem: function(){\r\n      this.dispatchEvent('export-item');\r\n    },\r\n    dispatchEvent: function(event, data){\r\n      this.$dispatch(event, data);\r\n    },\r\n  },\r\n  computed: {\r\n  },\r\n  events: {\r\n    'show-badge': function(val) {\r\n      this.showBadge = true;\r\n      this.badgeText = val;\r\n    },\r\n    'search-cleared': function(){\r\n      this.searchFor = '';\r\n    }\r\n  }\r\n});\r\n","// registering controls\r\nVue.component('my-book-read', MyBookRead);\r\nVue.component('my-header', MyHeader);\r\n\r\nvar vm = new Vue({\r\n    el: '#reads',\r\n\r\n    // data setup\r\n    data: {\r\n      theBook: {\r\n        'id': '',\r\n        'title': '',\r\n        'reads': [],\r\n      },\r\n      book_id: '',\r\n      allStatuses: '',\r\n    },\r\n\r\n    // what to do once the page load at first\r\n    ready: function(){\r\n      this.fetchBookReads();\r\n    },\r\n\r\n    // methods\r\n    methods: {\r\n      deleteRead: function(id){\r\n        var info = { id: id };\r\n        this.$http.post('/api/deleteBookRead/', info, function(){\r\n          $('.row[data-id=\"'+id+'\"]').fadeOut().remove();\r\n        });\r\n\r\n      },\r\n      submitRead: function(data, comp_ref){\r\n        this.showLoader();\r\n        this.$http.post('/api/setBookRead', data, function(response){\r\n\r\n          this.hideLoader();\r\n\r\n          if(response.success === true && comp_ref !== null){\r\n            comp_ref.setReadId(response.value);\r\n          }\r\n\r\n        });\r\n      },\r\n      newRead: function(e){\r\n        var newComp = new MyBookRead();\r\n        newComp.statuses =  this.allStatuses;\r\n        newComp.readStatus =  1;\r\n        newComp.showDelete = false;\r\n        newComp.showClear = true;\r\n        newComp.bookId = this.theBook.id;\r\n\r\n        newComp.$on('delete-read', function(id){\r\n          vm.deleteRead(id);\r\n        });\r\n        newComp.$on('submit-read', function(data){\r\n          vm.submitRead(data, newComp);\r\n        });\r\n\r\n        newComp.$mount().$before('.new-read');\r\n      },\r\n      showLoader: function(){\r\n        $('.fullpage-mask').show();\r\n        $('.fullpage-loader').show();\r\n      },\r\n      hideLoader: function(){\r\n        $('.fullpage-mask').hide();\r\n        $('.fullpage-loader').hide();\r\n      },\r\n      fetchBookReads: function(){\r\n        this.showLoader();\r\n\r\n        this.fetchStatuses();\r\n\r\n        var id = this.book_id;\r\n        this.$http.get('/api/bookReads/'+id, function(reads){\r\n\r\n          this.theBook.id = reads.id;\r\n          this.theBook.title = reads.title;\r\n          this.theBook.reads = reads.reads;\r\n\r\n          this.hideLoader();\r\n\r\n        });\r\n      },\r\n      fetchStatuses: function(){\r\n        this.$http.get('/api/statuses/', function(statuses){\r\n          this.$set('statuses', statuses);\r\n          this.allStatuses = statuses;\r\n          this.hideLoader();\r\n        });\r\n      }\r\n    },\r\n\r\n    // components events\r\n    events: {\r\n      'delete-read': function(id){\r\n        this.deleteRead(id);\r\n      },\r\n      'submit-read': function(data){\r\n        this.submitRead(data, null);\r\n      }\r\n    }\r\n\r\n});\r\n"],"sourceRoot":"/source/"}