{"version":3,"sources":["token.js","vue-addressbar.js","vue-author-card.js","vue-uploader.js","vue-header.js","authors.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACptfile":"authors.js","sourcesContent":["\"use strict\";\r\n\r\nVue.http.headers.common['X-CSRF-TOKEN'] = document.querySelector('#token').getAttribute('value');\r\n","var MyAddressBar = Vue.extend({\r\n  template: '#addresstab',\r\n  props: {\r\n      'selectedLetter': {\r\n          type: String,\r\n          twoWay: true,\r\n          default: ''\r\n      }\r\n  },\r\n  ready: function(){\r\n    this.dispatchEvent('letterChanged', this.selectedLetter);\r\n  },\r\n  methods: {\r\n      isActive: function(str) {\r\n          if (this.selectedLetter == str) {\r\n              return 'active'\r\n          }\r\n          return ''\r\n      },\r\n      dispatchEvent: function(eventName, args) {\r\n          this.$dispatch(eventName, args)\r\n      },\r\n      letterChanged: function(str) {\r\n        this.selectedLetter = str;\r\n        this.dispatchEvent('letter-changed', str)\r\n      },\r\n  },\r\n  events: {\r\n    setLetter: function(str) {\r\n      this.selectedLetter = str;\r\n      this.dispatchEvent('letterChanged', str);\r\n    }\r\n\r\n  }\r\n\r\n});\r\n","var MyAuthor = Vue.extend({\r\n  template: '#author-card-template',\r\n  props: ['myAuthor'],\r\n  data: {\r\n    author_id: ''\r\n  },\r\n  methods: {\r\n    deleteAuthor: function(e){\r\n      e.preventDefault();\r\n\r\n      var that = this;\r\n\r\n      swal({\r\n       title: 'Are you sure?',\r\n       text: \"You are about to remove this author, you won't be able to revert this!\",\r\n       type: 'warning',\r\n       showCancelButton: true,\r\n       confirmButtonColor: '#3085d6',\r\n       cancelButtonColor: '#d33',\r\n       confirmButtonText: 'Yes, delete it!'\r\n     }).then(function(isConfirm) {\r\n       if (isConfirm) {\r\n         that.$dispatch('author-delete', that.author_id);\r\n       }\r\n     })\r\n   },\r\n   editAuthor: function(e) {\r\n     e.preventDefault();\r\n\r\n     this.$dispatch('author-edit', this.author_id);\r\n   }\r\n  }\r\n});\r\n","var MyUploader = Vue.extend({\r\n  template: '#uploader-template',\r\n  data: {\r\n    imageLoaded: 'false',\r\n  },\r\n  props: ['imageSrc'],\r\n  computed: {\r\n    isClearable: function(){\r\n      if(this.imageLoaded == 'true') return true;\r\n\r\n      return false;\r\n    }\r\n  },\r\n  methods: {\r\n    dispatchEvent: function(eventName, args) {\r\n      this.$dispatch(eventName, args)\r\n    },\r\n    previewThumbnail: function(event) {\r\n      var inputObj = event.target;\r\n\r\n      if (inputObj.files && inputObj.files[0]) {\r\n        var reader = new FileReader();\r\n\r\n        var vm = this;\r\n\r\n        // Listen to the load event raised by the file reader in order to show the image\r\n        reader.onload = function(e) {\r\n          vm.imageSrc = e.target.result;\r\n          vm.imageLoaded = 'true';\r\n          vm.dispatchEvent('cover-chosen', vm.imageSrc);\r\n        }\r\n\r\n        // making the reader load the image for real\r\n        reader.readAsDataURL(inputObj.files[0]);\r\n\r\n      }\r\n    },\r\n    clearThumbnail: function(){\r\n    \t$('#thumbnail').files = null;\r\n      $('#thumbnail').val(null);\r\n      this.imageSrc = '';\r\n      this.imageLoaded = 'false';\r\n      this.dispatchEvent('cover-clear');\r\n    }\r\n  },\r\n  events: {\r\n    'image-source': function(str){\r\n      this.clearThumbnail();\r\n      this.imageSrc = str;\r\n    }\r\n  }\r\n});\r\n","var MyHeader = Vue.extend({\r\n  template: '#header-control-template',\r\n  props: {\r\n    headerTitle: {\r\n      type: String,\r\n      default: 'Title'\r\n    },\r\n    searchPlaceholder: {\r\n      type: String,\r\n      default: 'Search all'\r\n    },\r\n    search: { // Allow searching\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    filterSearch: { // Let the control know this will be used as filter for the v-for calls\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    exportExcel: { // Allow data export icon\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    exportButtonTooltip: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    backButton: { // Allow back button\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    clearButton: { // Allow search clear button\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    addButton: { // Allow add button\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    addButtonTooltip: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    showImage: { // Allow image on header\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    imageUrl: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    searchFor: {\r\n      type: String,\r\n      twoWay: true,\r\n      default: ''\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      searchPerformed: false,\r\n      showBadge: false,\r\n      badgeText: '',\r\n      isMobileView: false,\r\n    }\r\n  },\r\n  ready() {\r\n    this.isMobileView = ($(window).width() < 768);\r\n  },\r\n  methods: {\r\n    coerceBoolean: function(val){\r\n      return (typeof val !== \"string\" ? val :\r\n        val === \"true\" ? true :\r\n        val === \"false\" ? false :\r\n        val === \"null\" ? false :\r\n        val === \"undefined\" ? false : val);\r\n    },\r\n    setFilter: function(){\r\n      if(!this.filterSearch){\r\n        this.searchPerformed = true;\r\n      }\r\n      this.dispatchEvent('set-filter', this.searchFor);\r\n    },\r\n    clearFilter: function(){\r\n      this.searchFor = '';\r\n      if(!this.filterSearch){\r\n        this.searchPerformed = false;\r\n      }\r\n      this.dispatchEvent('clear-filter');\r\n    },\r\n    addItem: function(){\r\n      this.dispatchEvent('add-item');\r\n    },\r\n    exportItem: function(){\r\n      this.dispatchEvent('export-item');\r\n    },\r\n    dispatchEvent: function(event, data){\r\n      this.$dispatch(event, data);\r\n    },\r\n  },\r\n  computed: {\r\n  },\r\n  events: {\r\n    'show-badge': function(val) {\r\n      this.showBadge = true;\r\n      this.badgeText = val;\r\n    },\r\n    'search-cleared': function(){\r\n      this.searchFor = '';\r\n    }\r\n  }\r\n});\r\n","// register components\r\nVue.component('my-uploader', MyUploader);\r\nVue.component('my-author', MyAuthor);\r\nVue.component('my-addressbar', MyAddressBar);\r\nVue.component('my-header', MyHeader);\r\n\r\nvar vm = new Vue({\r\n    el: '#authors',\r\n\r\n    // data setup\r\n    data: {\r\n      searchFor: '',\r\n      currentLetter: '',\r\n      authorAvatar: '',\r\n      newAuthor: {\r\n        'id': '',\r\n        'name': '',\r\n        'website': '',\r\n        'email': '',\r\n        'nationality': '',\r\n        'nationality_id': '',\r\n        'avatar': '',\r\n        'birth': '',\r\n        'death': '',\r\n        'modaltitle': 'New Author'\r\n      },\r\n      allAuthors: [],\r\n      currentShownAuthors:[],\r\n      currentCount: 0,\r\n      currentIndex: 0,\r\n      lazyLoadAmount: 12,\r\n    },\r\n\r\n    // what to do once the page load at first\r\n    ready: function(){\r\n      // Telling to the address tab control to highlight the proper letter\r\n      var letter = $('.mbs-address-tabs .active a').html();\r\n      letter = (letter == 'All' || letter == 'all' || letter == 'ALL' || typeof(letter) == 'undefined')?'':letter;\r\n      this.$broadcast('setLetter', letter);\r\n\r\n      // fetching settings\r\n      this.fetchSettings();\r\n\r\n      // fetching nationalities for add/edit purposes\r\n      this.fetchNationalities();\r\n\r\n      // fetching required authors\r\n      this.fetchAuthors(letter);\r\n\r\n    },\r\n\r\n    // computations used to show/hide enable/disable controls\r\n    computed: {\r\n      authorIsNotFilled: function(){\r\n        if (! this.newAuthor['name']) return true;\r\n\r\n        return false;\r\n      }\r\n    },\r\n\r\n    watch: {\r\n      'searchFor': function(val, oldVal){\r\n        // Here I should be able to perform the filter to all the authors.\r\n        // Every search cause a lazy load reset so to start from 12 shown at first.\r\n        this.clearLazyLoaded();\r\n        this.lazyLoadAuthors();\r\n\r\n      },\r\n      'currentLetter': function(val, oldVal){\r\n        // Here I should be able to perform the filter to all the authors.\r\n        // Every letter change cause a lazy load reset so to start from 12 shown at first.\r\n        this.clearLazyLoaded();\r\n        this.lazyLoadAuthors();\r\n\r\n      }\r\n    },\r\n\r\n    // methods\r\n    methods: {\r\n      highlightSearch: function(){\r\n        $('#text_to_search').focus();\r\n      },\r\n      fetchSettings: function(){\r\n        this.$http.get('/api/getSettings', function(response){\r\n          if(response.success === true){\r\n            this.lazyLoadAmount = parseInt(response.data.authors_lazyload, 10);\r\n          }\r\n        });\r\n      },\r\n      fetchNationalities: function(){\r\n        this.$http.get('/api/nationalities', function(nationalities){\r\n          this.$set('nationalities', nationalities);\r\n        });\r\n      },\r\n      fetchAuthors: function(letter){\r\n        this.currentLetter = letter;\r\n        this.showLoader();\r\n        this.$http.get('/api/authors?letter='+letter, function(authors){\r\n          this.allAuthors = authors;\r\n\r\n          this.clearLazyLoaded();\r\n          this.lazyLoadAuthors();\r\n\r\n          this.hideLoader();\r\n\r\n          this.$broadcast('show-badge', 'Total: ' + authors.length);\r\n\r\n          this.$nextTick(function(){\r\n            $('[data-toggle=\"tooltip\"]').tooltip();\r\n            $('#birth').datetimepicker({\r\n              format: 'YYYY-MM-DD'\r\n            });\r\n            $('#death').datetimepicker({\r\n                useCurrent: false,\r\n                format: 'YYYY-MM-DD'\r\n            });\r\n            $(\"#birth\").on(\"dp.change\", function (e) {\r\n                $('#death').data(\"DateTimePicker\").minDate(e.date);\r\n            });\r\n            $(\"#death\").on(\"dp.change\", function (e) {\r\n                $('#birth').data(\"DateTimePicker\").maxDate(e.date);\r\n            });\r\n\r\n            $('.mbs-content-row').scroll(function() {\r\n               if($('.mbs-content-row').scrollTop() + $('.mbs-content-row').innerHeight() >= $(this)[0].scrollHeight) {\r\n                 vm.lazyLoadAuthors();\r\n               }\r\n            });\r\n\r\n          });\r\n        });\r\n      },\r\n      showLoader: function(){\r\n        $('.fullpage-mask').show();\r\n        $('.fullpage-loader').show();\r\n      },\r\n      hideLoader: function(){\r\n        $('.fullpage-mask').hide();\r\n        $('.fullpage-loader').hide();\r\n      },\r\n      onSubmitAuthor: function(e){\r\n        e.preventDefault();\r\n        this.showLoader();\r\n        var author = this.newAuthor;\r\n\r\n        author.avatar = this.authorAvatar;\r\n        if (author.avatar == '') {\r\n          author.avatar = $('#imageSrc').attr('src');\r\n        }\r\n\r\n        // clearing information on the modal\r\n        this.authorAvatar = '';\r\n        this.newAuthor = { id: '', name: '', website: '', email: '', birth: '', death: '', nationality_id: '', avatar: '', modaltitle: 'New Author' };\r\n\r\n        // saving to db\r\n        this.$http.post('/api/setAuthor', author, function(){\r\n          // refreshing authors\r\n          this.fetchAuthors(this.currentLetter);\r\n          this.hideLoader();\r\n        });\r\n        $('#addModal').modal('hide');\r\n\r\n      },\r\n      addAuthor: function(){\r\n        var that = this;\r\n\r\n        this.authorAvatar = '';\r\n        this.newAuthor = { id: '', name: '', website: '', email: '', birth: '', death: '', nationality_id: '', avatar: '', modaltitle: 'New Author' };\r\n        that.$broadcast('author-avatar', this.authorAvatar);\r\n        $('#imageSrc').attr('src', this.authorAvatar);\r\n\r\n        $('#addModal').modal('show');\r\n\r\n      },\r\n      isShowableAuthor: function(val) {\r\n        if ((!this.searchFor || this.searchFor == '') && (!this.currentLetter || this.currentLetter == '')) return true;\r\n\r\n        var author_result = (val.name != null && val.name.toLowerCase().indexOf(this.searchFor) > -1);\r\n        var initials_result = true;\r\n\r\n        if( this.currentLetter != null && this.currentLetter != '' && this.currentLetter.toLowerCase() != 'all' ){\r\n          initials_result = (val.name != null && val.name.toLowerCase().startsWith(this.currentLetter.toLowerCase()));\r\n        }\r\n\r\n        return initials_result && author_result;\r\n      },\r\n      clearLazyLoaded: function(){\r\n        this.currentShownAuthors = [];\r\n        this.currentCount = 0;\r\n        this.currentIndex = 0;\r\n      },\r\n      lazyLoadAuthors: function(){\r\n        if(this.allAuthors.length <= this.lazyLoadAmount){\r\n          this.currentShownAuthors = this.allAuthors;\r\n          this.currentCount = this.allAuthors.length;\r\n          this.currentIndex = this.allAuthors.length;\r\n        } else {\r\n          var howMany = (this.currentIndex + this.lazyLoadAmount >= this.allAuthors.length) ? (this.allAuthors.length - this.currentIndex) : this.lazyLoadAmount;\r\n          var startFrom = this.currentIndex;\r\n\r\n          var i = 0;\r\n          var currentAdded = 0;\r\n\r\n          while(currentAdded < howMany && startFrom + i < this.allAuthors.length ){\r\n            if(this.isShowableAuthor(this.allAuthors[startFrom + i])){\r\n              this.currentShownAuthors.push(this.allAuthors[startFrom + i]);\r\n              this.currentCount++;\r\n              currentAdded++;\r\n            }\r\n            this.currentIndex++;\r\n            i++;\r\n          }\r\n        }\r\n        this.$set('authors', this.currentShownAuthors);\r\n      },\r\n    },\r\n\r\n    // component events\r\n    events: {\r\n      'add-item': function(){\r\n        this.addAuthor();\r\n      },\r\n      'author-delete': function(id){\r\n        var info = { id: id };\r\n        this.$http.post('/api/deleteAuthor/', info, function(){\r\n          $('.author-card[data-id=\"'+id+'\"]').fadeOut().remove();\r\n        });\r\n\r\n      },\r\n      'author-edit': function(id){\r\n        var that = this;\r\n        this.showLoader();\r\n        this.$http.get('/api/getAuthor/'+id, function(author){\r\n          if(!author){\r\n            swal('Mmmmh', 'It seems I can\\'t find any information related to this author', 'Error');\r\n            return;\r\n          }\r\n\r\n          this.authorAvatar = (author.avatar.indexOf('empty')==-1)?author.avatar:'';\r\n          this.newAuthor = { id: author.id, name: author.name, website: author.website, email: author.email, birth: author.birth, death: author.death, nationality_id: author.nationality_id, avatar: author.avatar, modaltitle: 'Edit Author' };\r\n          this.$broadcast('image-source', that.authorAvatar);\r\n\r\n          $('#imageSrc').attr('src', that.authorAvatar);\r\n\r\n          this.hideLoader();\r\n\r\n          $('#addModal').modal('show');\r\n\r\n        });\r\n\r\n      },\r\n      'cover-chosen': function(dataUrl){\r\n        this.authorAvatar = dataUrl;\r\n        this.newAuthor.avatar = dataUrl;\r\n      },\r\n      'cover-clear': function(){\r\n        this.authorAvatar = '';\r\n        this.newAuthor.avatar = '';\r\n      }\r\n    }\r\n});\r\n\r\n$('html').keyup(function(e){\r\n    if(e.keyCode == 113) {\r\n        vm.highlightSearch();\r\n    }\r\n});\r\n"],"sourceRoot":"/source/"}