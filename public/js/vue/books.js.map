{"version":3,"sources":["token.js","vue-book-card.js","vue-header.js","books.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjtfile":"books.js","sourcesContent":["\"use strict\";\r\n\r\nVue.http.headers.common['X-CSRF-TOKEN'] = document.querySelector('#token').getAttribute('value');\r\n","var MyBook = Vue.extend({\r\n  template: '#book-card-template',\r\n  props: {\r\n    myBook: {\r\n      default: null\r\n    },\r\n    showDetails: { // Allow to hide details tooltip, default hide\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: true\r\n    },\r\n    hasTools: { // Show/hide tools, default shown\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: true\r\n    },\r\n    allowEdit: { // Show/hide edit tools (if hasTools is false, then this will be hidden in any case), default shown\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: true\r\n    },\r\n    allowDelete: { // Show/hide delete tools (if hasTools is false, then this will be hidden in any case), default shown\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: true\r\n    },\r\n    howManyOnRow: {\r\n      type: Number,\r\n      default: 4\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      book_id: '',\r\n      flipped_card: false,\r\n    }\r\n  },\r\n  methods: {\r\n    cardFlip: function(){\r\n      this.flipped_card = !this.flipped_card;\r\n    },\r\n    coerceBoolean: function(val){\r\n      return (typeof val !== \"string\" ? val :\r\n        val === \"true\" ? true :\r\n        val === \"false\" ? false :\r\n        val === \"null\" ? false :\r\n        val === \"undefined\" ? false : val);\r\n    },\r\n    columnWidth: function(){\r\n      if(this.howManyOnRow){\r\n        return '' + (12 / this.howManyOnRow);\r\n      }\r\n\r\n      return '3';\r\n    },\r\n    deleteBook: function(e){\r\n      e.preventDefault();\r\n\r\n      var that = this;\r\n\r\n      swal({\r\n       title: 'Are you sure?',\r\n       text: \"You are about to remove this book, you won't be able to revert this!\",\r\n       type: 'warning',\r\n       showCancelButton: true,\r\n       confirmButtonColor: '#3085d6',\r\n       cancelButtonColor: '#d33',\r\n       confirmButtonText: 'Yes, delete it!'\r\n     }).then(function(isConfirm) {\r\n       if (isConfirm) {\r\n         that.$dispatch('book-delete', that.book_id);\r\n       }\r\n     })\r\n   },\r\n   editBook: function(e) {\r\n     e.preventDefault();\r\n\r\n     this.$dispatch('book-edit', this.book_id);\r\n   }\r\n  }\r\n});\r\n","var MyHeader = Vue.extend({\r\n  template: '#header-control-template',\r\n  props: {\r\n    headerTitle: {\r\n      type: String,\r\n      default: 'Title'\r\n    },\r\n    searchPlaceholder: {\r\n      type: String,\r\n      default: 'Search all'\r\n    },\r\n    search: { // Allow searching\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    filterSearch: { // Let the control know this will be used as filter for the v-for calls\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    exportExcel: { // Allow data export icon\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    exportButtonTooltip: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    backButton: { // Allow back button\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    clearButton: { // Allow search clear button\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    addButton: { // Allow add button\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    addButtonTooltip: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    showImage: { // Allow image on header\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    imageUrl: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    searchFor: {\r\n      type: String,\r\n      twoWay: true,\r\n      default: ''\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      searchPerformed: false,\r\n      showBadge: false,\r\n      badgeText: '',\r\n      isMobileView: false,\r\n    }\r\n  },\r\n  ready() {\r\n    this.isMobileView = ($(window).width() < 768);\r\n  },\r\n  methods: {\r\n    coerceBoolean: function(val){\r\n      return (typeof val !== \"string\" ? val :\r\n        val === \"true\" ? true :\r\n        val === \"false\" ? false :\r\n        val === \"null\" ? false :\r\n        val === \"undefined\" ? false : val);\r\n    },\r\n    setFilter: function(){\r\n      if(!this.filterSearch){\r\n        this.searchPerformed = true;\r\n      }\r\n      this.dispatchEvent('set-filter', this.searchFor);\r\n    },\r\n    clearFilter: function(){\r\n      this.searchFor = '';\r\n      if(!this.filterSearch){\r\n        this.searchPerformed = false;\r\n      }\r\n      this.dispatchEvent('clear-filter');\r\n    },\r\n    addItem: function(){\r\n      this.dispatchEvent('add-item');\r\n    },\r\n    exportItem: function(){\r\n      this.dispatchEvent('export-item');\r\n    },\r\n    dispatchEvent: function(event, data){\r\n      this.$dispatch(event, data);\r\n    },\r\n  },\r\n  computed: {\r\n  },\r\n  events: {\r\n    'show-badge': function(val) {\r\n      this.showBadge = true;\r\n      this.badgeText = val;\r\n    },\r\n    'search-cleared': function(){\r\n      this.searchFor = '';\r\n    }\r\n  }\r\n});\r\n","\r\n// Components declaration\r\nVue.component('my-header', MyHeader);\r\nVue.component('my-book', MyBook);\r\n\r\nvar vm = new Vue({\r\n    el: '#books',\r\n\r\n    // data setup\r\n    data: {\r\n      entityId: '',\r\n      entityUrl: '',\r\n      searchFor: '',\r\n      allBooks: [],\r\n      currentShownBooks:[],\r\n      currentCount: 0,\r\n      currentIndex: 0,\r\n      lazyLoadAmount: 12,\r\n    },\r\n\r\n    // what to do once the page load at first\r\n    ready: function(){\r\n      this.fetchSettings();\r\n      this.fetchBooks();\r\n    },\r\n\r\n    // data changing watchers\r\n    watch: {\r\n      'searchFor': function(val, oldVal){\r\n        // Here I should be able to perform the filter to all the books.\r\n        // Every search cause a lazy load reset so to start from 12 shown at first.\r\n        this.clearLazyLoaded();\r\n        this.lazyLoadBooks();\r\n\r\n      },\r\n    },\r\n\r\n    // computations used to show/hide enable/disable controls\r\n    computed: {\r\n    },\r\n\r\n    // methods\r\n    methods: {\r\n      fetchSettings: function(){\r\n        this.$http.get('/api/getSettings', function(response){\r\n          if(response.success === true){\r\n            this.lazyLoadAmount = parseInt(response.data.books_of_object_lazyload, 10);\r\n          }\r\n        });\r\n      },\r\n      fetchBooks: function(){\r\n        this.showLoader();\r\n        this.$http.get('/api/'+this.entityUrl+'/'+this.entityId, function(data){\r\n          if(data.success == false) {\r\n            swal('Error', data.error, 'error');\r\n            return false;\r\n          }\r\n\r\n          this.allBooks = data.value;\r\n\r\n          this.clearLazyLoaded();\r\n          this.lazyLoadBooks();\r\n\r\n          this.hideLoader();\r\n\r\n          // If any jquery required\r\n          this.$nextTick(function() {\r\n            $('input.rating').rating();\r\n            $('[data-toggle=\"tooltip\"]').tooltip();\r\n          });\r\n\r\n          $('.mbs-content-row').scroll(function() {\r\n             if($('.mbs-content-row').scrollTop() + $('.mbs-content-row').innerHeight() >= $(this)[0].scrollHeight) {\r\n               vm.lazyLoadBooks();\r\n\r\n             }\r\n          });\r\n\r\n        });\r\n      },\r\n      clearLazyLoaded: function(){\r\n        this.currentShownBooks = [];\r\n        this.currentCount = 0;\r\n        this.currentIndex = 0;\r\n      },\r\n      lazyLoadBooks: function(){\r\n        if(this.allBooks.length <= this.lazyLoadAmount){\r\n          this.currentShownBooks = this.allBooks;\r\n          this.currentCount = this.allBooks.length;\r\n          this.currentIndex = this.allBooks.length;\r\n        } else {\r\n          var howMany = (this.currentIndex + this.lazyLoadAmount >= this.allBooks.length) ? (this.allBooks.length - this.currentIndex) : this.lazyLoadAmount;\r\n          var startFrom = this.currentIndex;\r\n\r\n          var i = 0;\r\n          var currentAdded = 0;\r\n\r\n          while(currentAdded < howMany && startFrom + i < this.allBooks.length ){\r\n            if(this.isShowableBook(this.allBooks[startFrom + i])){\r\n              this.currentShownBooks.push(this.allBooks[startFrom + i]);\r\n              this.currentCount++;\r\n              currentAdded++;\r\n            }\r\n            this.currentIndex++;\r\n            i++;\r\n          }\r\n        }\r\n        this.$set('books', this.currentShownBooks);\r\n        $('input.rating').rating();\r\n      },\r\n      isShowableBook: function(val) {\r\n        if ((!this.searchFor || this.searchFor == '')){\r\n          return true;\r\n        }\r\n\r\n        var book_result = (val.title != null && val.title.toLowerCase().indexOf(this.searchFor) > -1);\r\n        var author_result = (val.authors != null && val.authors.toLowerCase().indexOf(this.searchFor) > -1);\r\n\r\n        if((book_result || author_result)){\r\n          return true;\r\n        }\r\n\r\n        return false;\r\n      },\r\n      showLoader: function(){\r\n        $('.fullpage-mask').show();\r\n        $('.fullpage-loader').show();\r\n      },\r\n      hideLoader: function(){\r\n        $('.fullpage-mask').hide();\r\n        $('.fullpage-loader').hide();\r\n      }\r\n    },\r\n\r\n    // component events\r\n    events: {\r\n    }\r\n});\r\n"],"sourceRoot":"/source/"}