{"version":3,"sources":["token.js","vue-addressbar.js","vue-book-card.js","vue-uploader.js","vue-selector.js","vue-header.js","shelf.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACphtfile":"shelf.js","sourcesContent":["\"use strict\";\r\n\r\nVue.http.headers.common['X-CSRF-TOKEN'] = document.querySelector('#token').getAttribute('value');\r\n","var MyAddressBar = Vue.extend({\r\n  template: '#addresstab',\r\n  props: {\r\n      'selectedLetter': {\r\n          type: String,\r\n          twoWay: true,\r\n          default: ''\r\n      }\r\n  },\r\n  ready: function(){\r\n    this.dispatchEvent('letterChanged', this.selectedLetter);\r\n  },\r\n  methods: {\r\n      isActive: function(str) {\r\n          if (this.selectedLetter == str) {\r\n              return 'active'\r\n          }\r\n          return ''\r\n      },\r\n      dispatchEvent: function(eventName, args) {\r\n          this.$dispatch(eventName, args)\r\n      },\r\n      letterChanged: function(str) {\r\n        this.selectedLetter = str;\r\n        this.dispatchEvent('letter-changed', str)\r\n      },\r\n  },\r\n  events: {\r\n    setLetter: function(str) {\r\n      this.selectedLetter = str;\r\n      this.dispatchEvent('letterChanged', str);\r\n    }\r\n\r\n  }\r\n\r\n});\r\n","var MyBook = Vue.extend({\r\n  template: '#book-card-template',\r\n  props: {\r\n    myBook: {\r\n      default: null\r\n    },\r\n    showDetails: { // Allow to hide details tooltip, default hide\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: true\r\n    },\r\n    hasTools: { // Show/hide tools, default shown\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: true\r\n    },\r\n    allowEdit: { // Show/hide edit tools (if hasTools is false, then this will be hidden in any case), default shown\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: true\r\n    },\r\n    allowDelete: { // Show/hide delete tools (if hasTools is false, then this will be hidden in any case), default shown\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: true\r\n    },\r\n    howManyOnRow: {\r\n      type: Number,\r\n      default: 4\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      book_id: '',\r\n      flipped_card: false,\r\n    }\r\n  },\r\n  methods: {\r\n    cardFlip: function(){\r\n      this.flipped_card = !this.flipped_card;\r\n    },\r\n    coerceBoolean: function(val){\r\n      return (typeof val !== \"string\" ? val :\r\n        val === \"true\" ? true :\r\n        val === \"false\" ? false :\r\n        val === \"null\" ? false :\r\n        val === \"undefined\" ? false : val);\r\n    },\r\n    columnWidth: function(){\r\n      if(this.howManyOnRow){\r\n        return '' + (12 / this.howManyOnRow);\r\n      }\r\n\r\n      return '3';\r\n    },\r\n    deleteBook: function(e){\r\n      e.preventDefault();\r\n\r\n      var that = this;\r\n\r\n      swal({\r\n       title: 'Are you sure?',\r\n       text: \"You are about to remove this book, you won't be able to revert this!\",\r\n       type: 'warning',\r\n       showCancelButton: true,\r\n       confirmButtonColor: '#3085d6',\r\n       cancelButtonColor: '#d33',\r\n       confirmButtonText: 'Yes, delete it!'\r\n     }).then(function(isConfirm) {\r\n       if (isConfirm) {\r\n         that.$dispatch('book-delete', that.book_id);\r\n       }\r\n     })\r\n   },\r\n   editBook: function(e) {\r\n     e.preventDefault();\r\n\r\n     this.$dispatch('book-edit', this.book_id);\r\n   }\r\n  }\r\n});\r\n","var MyUploader = Vue.extend({\r\n  template: '#uploader-template',\r\n  data: {\r\n    imageLoaded: 'false',\r\n  },\r\n  props: ['imageSrc'],\r\n  computed: {\r\n    isClearable: function(){\r\n      if(this.imageLoaded == 'true') return true;\r\n\r\n      return false;\r\n    }\r\n  },\r\n  methods: {\r\n    dispatchEvent: function(eventName, args) {\r\n      this.$dispatch(eventName, args)\r\n    },\r\n    previewThumbnail: function(event) {\r\n      var inputObj = event.target;\r\n\r\n      if (inputObj.files && inputObj.files[0]) {\r\n        var reader = new FileReader();\r\n\r\n        var vm = this;\r\n\r\n        // Listen to the load event raised by the file reader in order to show the image\r\n        reader.onload = function(e) {\r\n          vm.imageSrc = e.target.result;\r\n          vm.imageLoaded = 'true';\r\n          vm.dispatchEvent('cover-chosen', vm.imageSrc);\r\n        }\r\n\r\n        // making the reader load the image for real\r\n        reader.readAsDataURL(inputObj.files[0]);\r\n\r\n      }\r\n    },\r\n    clearThumbnail: function(){\r\n    \t$('#thumbnail').files = null;\r\n      $('#thumbnail').val(null);\r\n      this.imageSrc = '';\r\n      this.imageLoaded = 'false';\r\n      this.dispatchEvent('cover-clear');\r\n    }\r\n  },\r\n  events: {\r\n    'image-source': function(str){\r\n      this.clearThumbnail();\r\n      this.imageSrc = str;\r\n    }\r\n  }\r\n});\r\n","var MySelector = Vue.extend({\r\n  template: '#selector-control-template',\r\n  props: {\r\n    options: {\r\n      type: Array,\r\n      default() { return [] },\r\n    },\r\n    value: {\r\n      twoWay: true\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      default: 'Nothing Selected'\r\n    },\r\n    multiple: {\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    search: { // Allow searching (only works when options are provided)\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    limit: {\r\n      type: Number,\r\n      default: 1024\r\n    },\r\n    closeOnSelect: { // only works when multiple==false\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    }\r\n  },\r\n  ready() {\r\n    if (this.value.constructor !== Array) {\r\n      if (this.value.length === 0) {\r\n        this.value = []\r\n      } else {\r\n        this.value = [this.value]\r\n      }\r\n    } else {\r\n      if (!this.multiple && this.value.length > 1) {\r\n        this.value = this.value.slice(0, 1)\r\n      } else if (this.multiple && this.value.length > this.limit) {\r\n        this.value = this.value.slice(0, this.limit)\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      searchText: null,\r\n      show: false,\r\n      showNotify: false\r\n    }\r\n  },\r\n  computed: {\r\n    selectedItems: function() {\r\n      let foundItems = [];\r\n      if (this.value.length) {\r\n        for (var item of this.value) {\r\n          if (this.options.length === 0)\r\n          {\r\n            foundItems = this.value;\r\n          }\r\n          else\r\n          {\r\n              let option\r\n              this.options.some(o => {\r\n                if(o.value === item) {\r\n                  option = o\r\n                  return true\r\n                }\r\n              })\r\n              option && foundItems.push(option.label)\r\n          }\r\n        }\r\n      } else if(this.value != 0) {\r\n        if (this.options.length === 0)\r\n        {\r\n          foundItems = this.value;\r\n        }\r\n        else\r\n        {\r\n          let option\r\n          this.options.some(o => {\r\n            if(o.value === this.value) {\r\n              option = o\r\n              return true\r\n            }\r\n          })\r\n          option && foundItems.push(option.label)\r\n        }\r\n      }\r\n      return foundItems.join(', ')\r\n\r\n    },\r\n    showPlaceholder: function() {\r\n      return this.value.length === 0\r\n    }\r\n  },\r\n  watch: {\r\n    value(val) {\r\n      if (val.length > this.limit) {\r\n        this.showNotify = true\r\n        this.value.pop()\r\n        setTimeout(() => this.showNotify = false, 1000)\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    coerceBoolean: function(val){\r\n      return (typeof val !== \"string\" ? val :\r\n        val === \"true\" ? true :\r\n        val === \"false\" ? false :\r\n        val === \"null\" ? false :\r\n        val === \"undefined\" ? false : val);\r\n    },\r\n    select: function(v) {\r\n        if (this.value.constructor === Array && this.value.indexOf(v) === -1) {\r\n          if (this.multiple) {\r\n            this.value.push(v)\r\n          } else {\r\n            this.value = [v]\r\n            this.$dispatch('selection-changed', this.value);\r\n          }\r\n        } else {\r\n          if (this.multiple) {\r\n            this.value.$remove(v)\r\n          } else {\r\n            this.value = [v]\r\n            this.$dispatch('selection-changed', this.value);\r\n          }\r\n        }\r\n        if (this.closeOnSelect) {\r\n          this.toggleDropdown()\r\n        }\r\n    },\r\n    isSelected: function(v) {\r\n      if (this.value.constructor !== Array) {\r\n        return this.value == v\r\n      } else {\r\n        return this.value.indexOf(v) !== -1\r\n      }\r\n    },\r\n    toggleDropdown: function() {\r\n      this.show = !this.show\r\n    }\r\n  },\r\n  events: {\r\n    'clear-selection-search': function(){\r\n      this.searchText = '';\r\n    }\r\n  }\r\n});\r\n","var MyHeader = Vue.extend({\r\n  template: '#header-control-template',\r\n  props: {\r\n    headerTitle: {\r\n      type: String,\r\n      default: 'Title'\r\n    },\r\n    searchPlaceholder: {\r\n      type: String,\r\n      default: 'Search all'\r\n    },\r\n    search: { // Allow searching\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    filterSearch: { // Let the control know this will be used as filter for the v-for calls\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    exportExcel: { // Allow data export icon\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    exportButtonTooltip: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    backButton: { // Allow back button\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    clearButton: { // Allow search clear button\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    addButton: { // Allow add button\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    addButtonTooltip: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    showImage: { // Allow image on header\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    imageUrl: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    searchFor: {\r\n      type: String,\r\n      twoWay: true,\r\n      default: ''\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      searchPerformed: false,\r\n      showBadge: false,\r\n      badgeText: '',\r\n      isMobileView: false,\r\n    }\r\n  },\r\n  ready() {\r\n    this.isMobileView = ($(window).width() < 768);\r\n  },\r\n  methods: {\r\n    coerceBoolean: function(val){\r\n      return (typeof val !== \"string\" ? val :\r\n        val === \"true\" ? true :\r\n        val === \"false\" ? false :\r\n        val === \"null\" ? false :\r\n        val === \"undefined\" ? false : val);\r\n    },\r\n    setFilter: function(){\r\n      if(!this.filterSearch){\r\n        this.searchPerformed = true;\r\n      }\r\n      this.dispatchEvent('set-filter', this.searchFor);\r\n    },\r\n    clearFilter: function(){\r\n      this.searchFor = '';\r\n      if(!this.filterSearch){\r\n        this.searchPerformed = false;\r\n      }\r\n      this.dispatchEvent('clear-filter');\r\n    },\r\n    addItem: function(){\r\n      this.dispatchEvent('add-item');\r\n    },\r\n    exportItem: function(){\r\n      this.dispatchEvent('export-item');\r\n    },\r\n    dispatchEvent: function(event, data){\r\n      this.$dispatch(event, data);\r\n    },\r\n  },\r\n  computed: {\r\n  },\r\n  events: {\r\n    'show-badge': function(val) {\r\n      this.showBadge = true;\r\n      this.badgeText = val;\r\n    },\r\n    'search-cleared': function(){\r\n      this.searchFor = '';\r\n    }\r\n  }\r\n});\r\n","// register components\r\nVue.component('my-uploader', MyUploader);\r\nVue.component('my-book', MyBook);\r\nVue.component('my-addressbar', MyAddressBar);\r\nVue.component('my-authors', MySelector);\r\nVue.component('my-genres', MySelector);\r\nVue.component('my-languages', MySelector);\r\nVue.component('my-collections', MySelector);\r\nVue.component('my-publishers', MySelector);\r\nVue.component('my-header', MyHeader);\r\n\r\nvar vm = new Vue({\r\n    el: '#shelf',\r\n\r\n    // data setup\r\n    data: {\r\n      searchFor: '',\r\n      currentLetter: '',\r\n      bookCover: '',\r\n      newBook: {\r\n        'id': '',\r\n        'title': '',\r\n        'original_title': '',\r\n        'pages': '',\r\n        'year': '',\r\n        'isbn': '',\r\n        'vote': '',\r\n        'description': '',\r\n        'publisher_id': '',\r\n        'authors': [],\r\n        'genres': [],\r\n        'collections': [],\r\n        'languages': [],\r\n        'cover': '',\r\n        'modaltitle': 'New Book'\r\n      },\r\n      allBooks: [],\r\n      currentShownBooks:[],\r\n      currentCount: 0,\r\n      currentIndex: 0,\r\n      lazyLoadAmount: 12,\r\n    },\r\n\r\n    // what to do once the page load at first\r\n    ready: function(){\r\n      // Telling to the address tab control to highlight the proper letter\r\n      var letter = $('.mbs-address-tabs .active a').html();\r\n      letter = (letter == 'All' || letter == 'all' || letter == 'ALL' || typeof(letter) == 'undefined')?'':letter;\r\n      this.$broadcast('setLetter', letter);\r\n\r\n      // fetching data for add/edit purposes\r\n      this.fetchData();\r\n\r\n      // fetching required Books\r\n      this.fetchBooks(letter);\r\n\r\n    },\r\n\r\n    // computations used to show/hide enable/disable controls\r\n    computed: {\r\n      bookIsNotFilled: function(){\r\n        if (! this.newBook['title']) return true;\r\n\r\n        return false;\r\n      },\r\n    },\r\n\r\n    watch: {\r\n      'searchFor': function(val, oldVal){\r\n        // Here I should be able to perform the filter to all the books.\r\n        // Every search cause a lazy load reset so to start from 12 shown at first.\r\n        this.clearLazyLoaded();\r\n        this.lazyLoadBooks();\r\n\r\n      },\r\n      'currentLetter': function(val, oldVal){\r\n        // Here I should be able to perform the filter to all the books.\r\n        // Every letter change cause a lazy load reset so to start from 12 shown at first.\r\n        this.clearLazyLoaded();\r\n        this.lazyLoadBooks();\r\n\r\n      }\r\n    },\r\n\r\n    // methods\r\n    methods: {\r\n      clearVote: function(e){\r\n        e.preventDefault();\r\n        this.newBook.vote = 0;\r\n        $('input.add-edit-rating').rating('rate', 0);\r\n      },\r\n      highlightSearch: function(){\r\n        $('#text_to_search').focus();\r\n      },\r\n      fetchData: function(){\r\n        this.$http.get('/api/getSettings', function(response){\r\n          if(response.success === true){\r\n            this.lazyLoadAmount = parseInt(response.data.shelf_lazyload, 10);\r\n          }\r\n        });\r\n        this.$http.get('/api/getAuthorsValueLabel', function(authors){\r\n          this.$set('authors', authors);\r\n        });\r\n        this.$http.get('/api/getGenresValueLabel', function(genres){\r\n          this.$set('genres', genres);\r\n        });\r\n        this.$http.get('/api/getLanguagesValueLabel', function(languages){\r\n          this.$set('languages', languages);\r\n        });\r\n        this.$http.get('/api/getPublishersValueLabel', function(publishers){\r\n          this.$set('publishers', publishers);\r\n        });\r\n        this.$http.get('/api/getCollectionsValueLabel', function(collections){\r\n          this.$set('collections', collections);\r\n        });\r\n      },\r\n      clearLazyLoaded: function(){\r\n        this.currentShownBooks = [];\r\n        this.currentCount = 0;\r\n        this.currentIndex = 0;\r\n      },\r\n      lazyLoadBooks: function(){\r\n        if(this.allBooks.length <= this.lazyLoadAmount){\r\n          this.currentShownBooks = this.allBooks;\r\n          this.currentCount = this.allBooks.length;\r\n          this.currentIndex = this.allBooks.length;\r\n        } else {\r\n          var howMany = (this.currentIndex + this.lazyLoadAmount >= this.allBooks.length) ? (this.allBooks.length - this.currentIndex) : this.lazyLoadAmount;\r\n          var startFrom = this.currentIndex;\r\n\r\n          var i = 0;\r\n          var currentAdded = 0;\r\n\r\n          while(currentAdded < howMany && startFrom + i < this.allBooks.length ){\r\n            if(this.isShowableBook(this.allBooks[startFrom + i])){\r\n              this.currentShownBooks.push(this.allBooks[startFrom + i]);\r\n              this.currentCount++;\r\n              currentAdded++;\r\n            }\r\n            this.currentIndex++;\r\n            i++;\r\n          }\r\n        }\r\n        this.$set('books', this.currentShownBooks);\r\n        this.$nextTick(function(){\r\n          $('.mbs-book-description').dotdotdot();\r\n          $('[data-toggle=\"tooltip\"]').tooltip();\r\n        });\r\n      },\r\n      fetchBooks: function(letter){\r\n        this.currentLetter = letter;\r\n        this.showLoader();\r\n        this.$http.get('/api/books', function(books){\r\n          this.allBooks = books;\r\n\r\n          this.clearLazyLoaded();\r\n          this.lazyLoadBooks();\r\n\r\n          this.hideLoader();\r\n          this.$nextTick(function() {\r\n            $('input.rating').rating();\r\n            $('.mbs-book-description').dotdotdot();\r\n            $('[data-toggle=\"tooltip\"]').tooltip();\r\n\r\n            $('.mbs-content-row').scroll(function() {\r\n               if($('.mbs-content-row').scrollTop() + $('.mbs-content-row').innerHeight() >= $(this)[0].scrollHeight) {\r\n                 vm.lazyLoadBooks();\r\n\r\n               }\r\n            });\r\n          });\r\n\r\n          this.$broadcast('show-badge', 'Total: '+books.length);\r\n        });\r\n\r\n      },\r\n      showLoader: function(){\r\n        $('.fullpage-mask').show();\r\n        $('.fullpage-loader').show();\r\n      },\r\n      hideLoader: function(){\r\n        $('.fullpage-mask').hide();\r\n        $('.fullpage-loader').hide();\r\n      },\r\n      onSubmitBook: function(e){\r\n        e.preventDefault();\r\n\r\n        this.showLoader();\r\n\r\n        var book = this.newBook;\r\n        book.cover = this.bookCover;\r\n        if (book.cover == '') {\r\n          book.cover = $('#imageSrc').attr('src');\r\n        }\r\n\r\n        // clearing information on the modal\r\n        this.bookCover = '';\r\n        this.newBook = { id: '',\r\n                         title: '',\r\n                         original_title: '',\r\n                         pages: '',\r\n                         year: '',\r\n                         isbn: '',\r\n                         vote: '',\r\n                         description: '',\r\n                         publisher_id: '',\r\n                         authors: [],\r\n                         genres: [],\r\n                         collections: [],\r\n                         languages: [],\r\n                         cover: '',\r\n                         modaltitle: 'New Book' };\r\n\r\n        this.$broadcast('clear-selection-search');\r\n\r\n        // saving to db\r\n        this.$http.post('/api/setBook', book, function(){\r\n          // refreshing Books\r\n          this.fetchBooks(this.currentLetter);\r\n\r\n          this.hideLoader();\r\n        });\r\n        $('#addModal').modal('hide');\r\n\r\n      },\r\n      addBook: function(){\r\n        this.bookCover = '';\r\n        this.newBook = { id: '',\r\n                         title: '',\r\n                         original_title: '',\r\n                         pages: '',\r\n                         year: '',\r\n                         isbn: '',\r\n                         vote: '',\r\n                         description: '',\r\n                         publisher_id: '',\r\n                         authors: [],\r\n                         genres: [],\r\n                         collections: [],\r\n                         languages: [],\r\n                         cover: '',\r\n                         modaltitle: 'New Book' };\r\n\r\n        this.$broadcast('clear-selection-search');\r\n        this.$broadcast('book-cover', this.bookCover);\r\n        $('input.add-edit-rating').rating('rate', 0);\r\n        $('#imageSrc').attr('src', this.bookCover);\r\n\r\n        $('#addModal').modal('show');\r\n\r\n      },\r\n      isShowableBook: function(val) {\r\n        if ((!this.searchFor || this.searchFor == '') && (!this.currentLetter || this.currentLetter == '')){\r\n          return true;\r\n        }\r\n\r\n        var book_result = (val.title != null && val.title.toLowerCase().indexOf(this.searchFor) > -1);\r\n        var author_result = (val.authors != null && val.authors.toLowerCase().indexOf(this.searchFor) > -1);\r\n        var initials_result = true;\r\n\r\n        if( this.currentLetter != null && this.currentLetter != '' && this.currentLetter.toLowerCase() != 'all' ){\r\n          initials_result = (val.title != null && val.title.toLowerCase().startsWith(this.currentLetter.toLowerCase()));\r\n        }\r\n\r\n        if(initials_result && (book_result || author_result)){\r\n          return true;\r\n        }\r\n\r\n        return false;\r\n      },\r\n      postURL(path, params, method) {\r\n          var method = method || \"post\"; // Set method to post by default if not specified.\r\n\r\n          // The rest of this code assumes you are not using a library.\r\n          // It can be made less wordy if you use one.\r\n          var form = document.createElement(\"form\");\r\n          form.setAttribute(\"method\", method);\r\n          form.setAttribute(\"action\", path);\r\n\r\n          for(var key in params) {\r\n              if(params.hasOwnProperty(key)) {\r\n                  var hiddenField = document.createElement(\"input\");\r\n                  hiddenField.setAttribute(\"type\", \"hidden\");\r\n                  hiddenField.setAttribute(\"name\", key);\r\n                  hiddenField.setAttribute(\"value\", params[key]);\r\n\r\n                  form.appendChild(hiddenField);\r\n               }\r\n          }\r\n\r\n          document.body.appendChild(form);\r\n          form.submit();\r\n      }\r\n    },\r\n\r\n    // component events\r\n    events: {\r\n      'add-item': function(){\r\n        this.addBook();\r\n      },\r\n      'export-item': function(){\r\n        this.postURL('/api/export','','get');\r\n      },\r\n      'book-delete': function(id){\r\n        var info = { id: id };\r\n        this.$http.post('/api/deleteBook/', info, function(){\r\n          $('.mbs-book-card[data-id=\"'+id+'\"]').fadeOut().remove();\r\n        });\r\n\r\n      },\r\n      'book-edit': function(id){\r\n        var that = this;\r\n        this.showLoader();\r\n        this.$http.get('/api/getBook/'+id, function(book){\r\n          if(!book){\r\n            swal('Mmmmh', 'It seems I can\\'t find any information related to this book', 'Error');\r\n            return;\r\n          }\r\n\r\n          this.bookCover = (book.cover.indexOf('empty')==-1)?book.cover:'';\r\n\r\n          this.newBook = { id: book.id,\r\n                           title: book.title,\r\n                           original_title: book.original_title,\r\n                           pages: book.pages,\r\n                           year: book.year,\r\n                           isbn: book.isbn,\r\n                           vote: book.vote,\r\n                           description: book.description,\r\n                           publisher_id: book.publisher_id,\r\n                           authors: (!book.authors)?[]:book.authors,\r\n                           genres: (!book.genres)?[]:book.genres,\r\n                           collections: (!book.collections)?[]:book.collections,\r\n                           languages: (!book.languages)?[]:book.languages,\r\n                           cover: book.cover,\r\n                           modaltitle: 'Edit Book' };\r\n          this.$broadcast('clear-selection-search');\r\n          this.$broadcast('image-source', this.bookCover);\r\n\r\n          $('input.add-edit-rating').rating('rate', book.vote);\r\n          $('#imageSrc').attr('src', that.bookCover);\r\n\r\n          this.hideLoader();\r\n\r\n          $('#addModal').modal('show');\r\n\r\n        });\r\n\r\n      },\r\n      'cover-chosen': function(dataUrl){\r\n        this.bookCover = dataUrl;\r\n        this.newBook.cover = dataUrl;\r\n      },\r\n      'cover-clear': function(){\r\n        this.bookCover = '';\r\n        this.newBook.cover = '';\r\n      }\r\n    }\r\n});\r\n\r\n$('html').keyup(function(e){\r\n    if(e.keyCode == 113) {\r\n        vm.highlightSearch();\r\n    }\r\n});\r\n"],"sourceRoot":"/source/"}