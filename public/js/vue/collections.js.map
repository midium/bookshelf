{"version":3,"sources":["token.js","vue-collection.js","vue-checklist.js","vue-header.js","collections.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrtfile":"collections.js","sourcesContent":["\"use strict\";\r\n\r\nVue.http.headers.common['X-CSRF-TOKEN'] = document.querySelector('#token').getAttribute('value');\r\n","var MyCollection = Vue.extend({\r\n  template: '#book-collection-template',\r\n  props: ['myCollection'],\r\n  data: {\r\n    collection_id: ''\r\n  },\r\n  methods: {\r\n     deleteCollection: function(e){\r\n       e.preventDefault();\r\n\r\n       var that = this;\r\n\r\n       swal({\r\n        title: 'Are you sure?',\r\n        text: \"You are about to remove this collection, you won't be able to revert this!\",\r\n        type: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, delete it!'\r\n      }).then(function(isConfirm) {\r\n        if (isConfirm) {\r\n          that.dispatchEvent('collection-delete', that.collection_id);\r\n        }\r\n      })\r\n     },\r\n     dispatchEvent: function(eventName, args) {\r\n         this.$dispatch(eventName, args)\r\n     },\r\n     editCollection: function(e) {\r\n       e.preventDefault();\r\n\r\n       this.dispatchEvent('collection-edit', this.collection_id);\r\n\r\n     }\r\n  }\r\n});\r\n","var MyChecklist = Vue.extend({\r\n  template: '#checklist-control-template',\r\n  props:{\r\n    items: {\r\n      type: Array,\r\n      default() { return [] },\r\n    },\r\n    selectedItems: {\r\n      type: Array,\r\n      default() { return [] },\r\n    },\r\n    blackList: {\r\n      type: Array,\r\n      default() { return [] },\r\n    },\r\n    search: { // Allow searching (only works when options are provided)\r\n    \ttype: Boolean,\r\n      coerce: this.coerceBoolean,\r\n    \tdefault: false\r\n    },\r\n    multiple: {\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n  },\r\n  data: {\r\n    searchText: null\r\n  },\r\n  methods: {\r\n    coerceBoolean: function(val){\r\n      return (typeof val !== \"string\" ? val :\r\n        val === \"true\" ? true :\r\n        val === \"false\" ? false :\r\n        val === \"null\" ? false :\r\n        val === \"undefined\" ? false : val);\r\n    },\r\n    getStatus(v) {\r\n      if(this.isSelected(v)){\r\n        return 'check';\r\n      }\r\n\r\n      return 'unchecked';\r\n    },\r\n    select(v) {\r\n        if (this.selectedItems.indexOf(v) === -1) {\r\n          if (this.multiple) {\r\n            this.selectedItems.push(v)\r\n          } else {\r\n            this.selectedItems = [v]\r\n          }\r\n        } else {\r\n          if (this.multiple) {\r\n            this.selectedItems.$remove(v)\r\n          }\r\n        }\r\n    },\r\n    isSelected(v) {\r\n      if (this.selectedItems.constructor !== Array) {\r\n        return this.selectedItems == v\r\n      } else {\r\n        return this.selectedItems.indexOf(v) !== -1\r\n      }\r\n    },\r\n    isBlackListed: function(item){\r\n      if(this.blackList.length > 0) {\r\n        for (var bitem of this.blackList) {\r\n          if(item.value == bitem.value){\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n\r\n      return false;\r\n    }\r\n  },\r\n  computed: {\r\n    showPlaceholder() {\r\n      return this.selectedItems.length === 0\r\n    },\r\n    availableItems: function(){\r\n      let result = [];\r\n      for (var item of this.items) {\r\n        if(!this.isBlackListed(item)){\r\n          result.push(item);\r\n        }\r\n      }\r\n\r\n      return result;\r\n    }\r\n  },\r\n});\r\n","var MyHeader = Vue.extend({\r\n  template: '#header-control-template',\r\n  props: {\r\n    headerTitle: {\r\n      type: String,\r\n      default: 'Title'\r\n    },\r\n    searchPlaceholder: {\r\n      type: String,\r\n      default: 'Search all'\r\n    },\r\n    search: { // Allow searching\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    filterSearch: { // Let the control know this will be used as filter for the v-for calls\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    exportExcel: { // Allow data export icon\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    exportButtonTooltip: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    backButton: { // Allow back button\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    clearButton: { // Allow search clear button\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    addButton: { // Allow add button\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    addButtonTooltip: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    showImage: { // Allow image on header\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    imageUrl: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    searchFor: {\r\n      type: String,\r\n      twoWay: true,\r\n      default: ''\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      searchPerformed: false,\r\n      showBadge: false,\r\n      badgeText: '',\r\n      isMobileView: false,\r\n    }\r\n  },\r\n  ready() {\r\n    this.isMobileView = ($(window).width() < 768);\r\n  },\r\n  methods: {\r\n    coerceBoolean: function(val){\r\n      return (typeof val !== \"string\" ? val :\r\n        val === \"true\" ? true :\r\n        val === \"false\" ? false :\r\n        val === \"null\" ? false :\r\n        val === \"undefined\" ? false : val);\r\n    },\r\n    setFilter: function(){\r\n      if(!this.filterSearch){\r\n        this.searchPerformed = true;\r\n      }\r\n      this.dispatchEvent('set-filter', this.searchFor);\r\n    },\r\n    clearFilter: function(){\r\n      this.searchFor = '';\r\n      if(!this.filterSearch){\r\n        this.searchPerformed = false;\r\n      }\r\n      this.dispatchEvent('clear-filter');\r\n    },\r\n    addItem: function(){\r\n      this.dispatchEvent('add-item');\r\n    },\r\n    exportItem: function(){\r\n      this.dispatchEvent('export-item');\r\n    },\r\n    dispatchEvent: function(event, data){\r\n      this.$dispatch(event, data);\r\n    },\r\n  },\r\n  computed: {\r\n  },\r\n  events: {\r\n    'show-badge': function(val) {\r\n      this.showBadge = true;\r\n      this.badgeText = val;\r\n    },\r\n    'search-cleared': function(){\r\n      this.searchFor = '';\r\n    }\r\n  }\r\n});\r\n","// register components\r\nVue.component('my-book-collection', MyCollection);\r\nVue.component('my-checklist', MyChecklist);\r\nVue.component('my-header', MyHeader);\r\n\r\nvar vm = new Vue({\r\n\r\n    el: '#collections',\r\n\r\n    // data setup\r\n    data: {\r\n      theCollection: {\r\n        'id': '',\r\n        'name': '',\r\n        'books': [],\r\n        'modaltitle': 'New Collection'\r\n      },\r\n      allBooks: [],\r\n      searchCollection: null,\r\n      selectedOnCollection: [],\r\n      selectedOnAvailable:[],\r\n      allCollections: [],\r\n      currentShownCollections:[],\r\n      currentCount: 0,\r\n      currentIndex: 0,\r\n      lazyLoadAmount: 12,\r\n    },\r\n\r\n    // what to do once the page load at first\r\n    ready: function(){\r\n      this.fetchSettings();\r\n      this.fetchCollectionsAndBooks();\r\n    },\r\n\r\n    watch: {\r\n      'searchCollection': function(val, oldVal){\r\n        // Here I should be able to perform the filter to all the collections.\r\n        // Every search cause a lazy load reset so to start from 12 shown at first.\r\n        this.clearLazyLoaded();\r\n        this.lazyLoadCollections();\r\n\r\n      },\r\n    },\r\n\r\n    // methods\r\n    methods: {\r\n      fetchSettings: function(){\r\n        this.$http.get('/api/getSettings', function(response){\r\n          if(response.success === true){\r\n            this.lazyLoadAmount = parseInt(response.data.collections_lazyload,10);\r\n          }\r\n        });\r\n      },\r\n      clearArrays: function(){\r\n        this.selectedOnCollection = [];\r\n        this.selectedOnAvailable = [];\r\n      },\r\n      addToCollection: function(){\r\n        if(this.selectedOnAvailable.length > 0){\r\n          for (var item of this.selectedOnAvailable) {\r\n            this.theCollection.books.push(item);\r\n          }\r\n          this.selectedOnAvailable = [];\r\n        }\r\n      },\r\n      removeFromCollection: function(){\r\n        if(this.selectedOnCollection.length > 0){\r\n          for (var item of this.selectedOnCollection) {\r\n            this.theCollection.books.$remove(item);\r\n          }\r\n          this.selectedOnCollection = [];\r\n        }\r\n      },\r\n      clearLazyLoaded: function(){\r\n        this.currentShownCollections = [];\r\n        this.currentCount = 0;\r\n        this.currentIndex = 0;\r\n      },\r\n      lazyLoadCollections: function(){\r\n        if(this.allCollections.length <= this.lazyLoadAmount){\r\n          this.currentShownCollections = this.allCollections;\r\n          this.currentCount = this.allCollections.length;\r\n          this.currentIndex = this.allCollections.length;\r\n        } else {\r\n          var howMany = (this.currentIndex + this.lazyLoadAmount >= this.allCollections.length) ? (this.allCollections.length - this.currentIndex) : this.lazyLoadAmount;\r\n          var startFrom = this.currentIndex;\r\n\r\n          var i = 0;\r\n          var currentAdded = 0;\r\n\r\n          while(currentAdded < howMany && startFrom + i < this.allCollections.length ){\r\n            if(this.isShowableCollection(this.allCollections[startFrom + i])){\r\n              this.currentShownCollections.push(this.allCollections[startFrom + i]);\r\n              this.currentCount++;\r\n              currentAdded++;\r\n            }\r\n            this.currentIndex++;\r\n            i++;\r\n          }\r\n        }\r\n        this.$set('collections', this.currentShownCollections);\r\n      },\r\n      isShowableCollection: function(val) {\r\n        if ((!this.searchCollection || this.searchCollection == '')){\r\n          return true;\r\n        }\r\n\r\n        return (val.name != null && val.name.toLowerCase().indexOf(this.searchCollection) > -1);\r\n      },\r\n      fetchCollections: function(manageLoader){\r\n\r\n        if (manageLoader) {\r\n          this.showLoader();\r\n        }\r\n\r\n        var id = $('input#id').val();\r\n        this.$http.get('/api/collections/', function(collections){\r\n          this.allCollections = collections;\r\n\r\n          this.clearLazyLoaded();\r\n          this.lazyLoadCollections();\r\n\r\n          if (manageLoader) {\r\n            this.hideLoader();\r\n          }\r\n\r\n          this.$nextTick(function(){\r\n            $('[data-toggle=\"tooltip\"]').tooltip();\r\n\r\n            $('.mbs-content-row').scroll(function() {\r\n               if($('.mbs-content-row').scrollTop() + $('.mbs-content-row').innerHeight() >= $(this)[0].scrollHeight) {\r\n                 vm.lazyLoadCollections();\r\n\r\n               }\r\n            });\r\n\r\n          });\r\n\r\n        });\r\n\r\n      },\r\n      fetchCollectionsAndBooks: function(){\r\n\r\n        this.showLoader();\r\n        this.fetchCollections(false);\r\n\r\n        this.$http.get('/api/books_collection/', function(books){\r\n          this.allBooks = books;\r\n\r\n          this.hideLoader();\r\n        });\r\n\r\n      },\r\n      onSubmitCollection: function(e){\r\n        e.preventDefault();\r\n\r\n        var collection = this.theCollection;\r\n\r\n        // clearing information on the modal\r\n        this.clearArrays();\r\n        this.theCollection = { id: '', name: '', books: [], modaltitle: 'New Collection' };\r\n\r\n        // saving to db\r\n        this.$http.post('/api/setCollection', collection, function(){\r\n          // refreshing collections\r\n          this.fetchCollections(true);\r\n\r\n        });\r\n        $('#addModal').modal('hide');\r\n\r\n      },\r\n      addCollection: function(){\r\n        // clearing information on the modal\r\n        this.clearArrays();\r\n        this.theCollection = { id: '', name: '', books: [], modaltitle: 'New Collection' };\r\n        $('#addModal').modal('show');\r\n      },\r\n      bookCount: function(books){\r\n        alert(books.length);\r\n        return books.length;\r\n      },\r\n      showLoader: function(){\r\n        $('.fullpage-mask').show();\r\n        $('.fullpage-loader').show();\r\n      },\r\n      hideLoader: function(){\r\n        $('.fullpage-mask').hide();\r\n        $('.fullpage-loader').hide();\r\n      }\r\n    },\r\n\r\n    // computations\r\n    computed: {\r\n      collectionIsNotFilled: function(){\r\n        if(!this.theCollection.name){\r\n          return true;\r\n        }\r\n\r\n        return false;\r\n      }\r\n    },\r\n\r\n    // events\r\n    events: {\r\n      'add-item': function(){\r\n        this.addCollection();\r\n      },\r\n      'collection-delete': function(id){\r\n        var info = { id: id };\r\n        this.$http.post('/api/deleteCollection/', info, function(){\r\n          $('.mbs-book-collection[data-id=\"'+id+'\"]').fadeOut().remove();\r\n        });\r\n\r\n      },\r\n      'collection-edit': function(id) {\r\n        var info = { id: id };\r\n        var that = this;\r\n        this.$http.get('/api/getCollection/'+id, function(collection){\r\n          if(!collection){\r\n            swal('Mmmmh', 'It seems I can\\'t find any information related to this collection', 'Error');\r\n            return;\r\n          }\r\n\r\n          this.theCollection = { id: collection.id, name: collection.name, books: collection.books, modaltitle: 'Edit Collection' };\r\n          $('#addModal').modal('show');\r\n\r\n        });\r\n      }\r\n    }\r\n\r\n});\r\n"],"sourceRoot":"/source/"}