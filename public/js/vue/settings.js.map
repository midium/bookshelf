{"version":3,"sources":["token.js","vue-header.js","settings.js"],"names":[],"mappingstfile":"settings.js","sourcesContent":["\"use strict\";\r\n\r\nVue.http.headers.common['X-CSRF-TOKEN'] = document.querySelector('#token').getAttribute('value');\r\n","var MyHeader = Vue.extend({\r\n  template: '#header-control-template',\r\n  props: {\r\n    headerTitle: {\r\n      type: String,\r\n      default: 'Title'\r\n    },\r\n    searchPlaceholder: {\r\n      type: String,\r\n      default: 'Search all'\r\n    },\r\n    search: { // Allow searching\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    filterSearch: { // Let the control know this will be used as filter for the v-for calls\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    exportExcel: { // Allow data export icon\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    exportButtonTooltip: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    backButton: { // Allow back button\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    clearButton: { // Allow search clear button\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    addButton: { // Allow add button\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    addButtonTooltip: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    showImage: { // Allow image on header\r\n      type: Boolean,\r\n      coerce: this.coerceBoolean,\r\n      default: false\r\n    },\r\n    imageUrl: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    searchFor: {\r\n      type: String,\r\n      twoWay: true,\r\n      default: ''\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      searchPerformed: false,\r\n      showBadge: false,\r\n      badgeText: '',\r\n      isMobileView: false,\r\n    }\r\n  },\r\n  ready() {\r\n    this.isMobileView = ($(window).width() < 768);\r\n  },\r\n  methods: {\r\n    coerceBoolean: function(val){\r\n      return (typeof val !== \"string\" ? val :\r\n        val === \"true\" ? true :\r\n        val === \"false\" ? false :\r\n        val === \"null\" ? false :\r\n        val === \"undefined\" ? false : val);\r\n    },\r\n    setFilter: function(){\r\n      if(!this.filterSearch){\r\n        this.searchPerformed = true;\r\n      }\r\n      this.dispatchEvent('set-filter', this.searchFor);\r\n    },\r\n    clearFilter: function(){\r\n      this.searchFor = '';\r\n      if(!this.filterSearch){\r\n        this.searchPerformed = false;\r\n      }\r\n      this.dispatchEvent('clear-filter');\r\n    },\r\n    addItem: function(){\r\n      this.dispatchEvent('add-item');\r\n    },\r\n    exportItem: function(){\r\n      this.dispatchEvent('export-item');\r\n    },\r\n    dispatchEvent: function(event, data){\r\n      this.$dispatch(event, data);\r\n    },\r\n  },\r\n  computed: {\r\n  },\r\n  events: {\r\n    'show-badge': function(val) {\r\n      this.showBadge = true;\r\n      this.badgeText = val;\r\n    },\r\n    'search-cleared': function(){\r\n      this.searchFor = '';\r\n    }\r\n  }\r\n});\r\n","// register components\r\nVue.component('my-header', MyHeader);\r\n\r\nvar vm = new Vue({\r\n\r\n    el: '#settings',\r\n\r\n    // data setup\r\n    data: {\r\n      settings: {\r\n        lazyLoad: {\r\n          shelf: '',\r\n          authors: '',\r\n          authorProfile: '',\r\n          collections: '',\r\n          collectionDetails: '',\r\n          objectsBooks: '',\r\n        },\r\n        pagination: {\r\n          publishers: '',\r\n          genres: '',\r\n          languages: '',\r\n        },\r\n      },\r\n      changeAllowed: false,\r\n      password: {\r\n        current: '',\r\n        new: '',\r\n        confirm: '',\r\n      },\r\n      currentPassword: '',\r\n      isCurrentPasswordOk: true,\r\n    },\r\n\r\n    // what to do once the page load at first\r\n    ready: function(){\r\n      this.fetchSettings();\r\n      this.$nextTick(function(){\r\n        $('[data-toggle=\"tooltip\"]').tooltip();\r\n\r\n      });\r\n    },\r\n\r\n    // methods\r\n    methods: {\r\n      fetchCurrentPassword: function(){\r\n        this.$http.get('/api/getCurrentPassword', function(response){\r\n          this.currentPassword = response.data;\r\n        });\r\n      },\r\n      fetchSettings: function(){\r\n        this.showLoader();\r\n\r\n        this.fetchCurrentPassword();\r\n\r\n        this.$http.get('/api/getSettings', function(response){\r\n          if(response.success === true){\r\n            this.settings.lazyLoad.shelf = response.data.shelf_lazyload;\r\n            this.settings.lazyLoad.authors = response.data.authors_lazyload;\r\n            this.settings.lazyLoad.authorProfile = response.data.author_profile_lazyload;\r\n            this.settings.lazyLoad.collections = response.data.collections_lazyload;\r\n            this.settings.lazyLoad.collectionDetails = response.data.collection_details_lazyload;\r\n            this.settings.lazyLoad.objectsBooks = response.data.books_of_object_lazyload;\r\n\r\n            this.settings.pagination.publishers = response.data.publishers_pagination;\r\n            this.settings.pagination.genres = response.data.genres_pagination;\r\n            this.settings.pagination.languages = response.data.languages_pagination;\r\n          } else {\r\n            swal('Error', response.error, 'error');\r\n          }\r\n\r\n          this.hideLoader();\r\n        });\r\n      },\r\n      settingsSave: function(e){\r\n        e.preventDefault();\r\n\r\n        this.showLoader();\r\n\r\n        this.$http.post('/api/setSettings', this.settings, function(response){\r\n          if(response.success === true){\r\n            swal('Success', 'Settings saved successfully', 'success');\r\n          } else {\r\n            swal('Error', response.error, 'error');\r\n          }\r\n\r\n          this.hideLoader();\r\n        });\r\n\r\n      },\r\n      submitNewPassword: function(e){\r\n        e.preventDefault();\r\n\r\n        this.$http.post('api/changePassword', this.password, function(response){\n          if(response.success === true){\r\n            swal('Success', 'Password changed successfully', 'success');\r\n          } else {\r\n            swal('Error', response.error, 'error');\r\n          }\r\n\n          this.toggleChangePassword();\r\n        });\r\n      },\r\n      toggleChangePassword: function(){\r\n        this.changeAllowed = !this.changeAllowed;\r\n      },\r\n      showLoader: function(){\r\n        $('.fullpage-mask').show();\r\n        $('.fullpage-loader').show();\r\n      },\r\n      hideLoader: function(){\r\n        $('.fullpage-mask').hide();\r\n        $('.fullpage-loader').hide();\r\n      }\r\n    },\r\n\r\n    // computations\r\n    computed: {\r\n      isNewPasswordCorrect: function(){\r\n        if (this.password.new != this.password.confirm) return false;\r\n\r\n        return true;\r\n      },\r\n      areAllPasswordsEnteredAndValid: function(){\r\n        if (this.password.current == '' && this.password.new == '' && this.password.confirm == '') return false;\r\n        if (this.password.current != '' && (this.password.new != this.password.confirm)) return false;\r\n\r\n        return true;\r\n      },\r\n      isCurrentPasswordCorrect: function(){\r\n        if(this.password.current == '') return true;\n\n        var that = this;\r\n        this.$http.post('/api/doesPasswordCorrespond', this.password, function(response){\r\n          that.isCurrentPasswordOk = response.success\r\n        });\r\n\r\n        return this.isCurrentPasswordOk;\r\n      }\r\n    },\r\n\r\n    // events\r\n    events: {\r\n    }\r\n\r\n});\r\n"],"sourceRoot":"/source/"}